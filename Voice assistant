import tkinter as tk
from tkinter import messagebox
import threading
import speech_recognition as sr
import pyttsx3
from datetime import datetime
import wikipedia
import smtplib
import requests
import openai

class VoiceAssistantGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("Voice Assistant")
        
        self.engine = pyttsx3.init()
        self.recognizer = sr.Recognizer()

        self.create_widgets()

    def create_widgets(self):
        self.text_box = tk.Text(self.root, height=25, width=60)
        self.text_box.pack(pady=10)

        self.listen_button = tk.Button(self.root, text="Listen", command=self.listen_thread)
        self.listen_button.pack(pady=5)

        self.exit_button = tk.Button(self.root, text="Exit", command=self.root.destroy)
        self.exit_button.pack(pady=5)

        self.query_label = tk.Label(self.root, text="Assistant: I want to search for")
        self.query_label.pack()

    def speak(self, text):
        self.text_box.insert(tk.END, f"Assistant: {text}\n")
        self.engine.say(text)
        self.engine.runAndWait()

    def listen_thread(self):
        self.listen_button.config(state=tk.DISABLED)
        threading.Thread(target=self.listen).start()

    def listen(self):
        with sr.Microphone() as source:
            self.text_box.insert(tk.END, "Listening...\n")
            self.recognizer.adjust_for_ambient_noise(source)
            audio = self.recognizer.listen(source)

            try:
                command = self.recognizer.recognize_google(audio)
                self.text_box.insert(tk.END, f"You: {command}\n")
                self.handle_command(command.lower())
            except sr.UnknownValueError:
                self.speak("Sorry, I didn't understand that.")
            except sr.RequestError:
                self.speak("Sorry, my speech service is down.")

        self.listen_button.config(state=tk.NORMAL)

    def handle_command(self, command):
        if 'hello' in command:
            self.speak("Hello! How can I help you?")
        elif 'time' in command:
            current_time = datetime.now().strftime("%H:%M")
            self.speak(f"The current time is {current_time}")
        elif 'date' in command:
            current_date = datetime.now().strftime("%B %d, %Y")
            self.speak(f"Today's date is {current_date}")
        elif 'search' in command:
            self.speak("What do you want to search for?")
            query = self.listen_for_query()
            if query:
                results = wikipedia.summary(query, sentences=2)
                self.speak(f"According to Wikipedia, {results}")
        else:
            self.speak("Sorry, I didn't catch that.")

    def listen_for_query(self):
        with sr.Microphone() as source:
            self.text_box.insert(tk.END, "Listening for query...\n")
            self.recognizer.adjust_for_ambient_noise(source)
            audio = self.recognizer.listen(source)

            try:
                query = self.recognizer.recognize_google(audio)
                self.text_box.insert(tk.END, f"User query: {query}\n")
                return query
            except sr.UnknownValueError:
                self.speak("Sorry, I didn't catch that.")
                return ""
            except sr.RequestError:
                self.speak("Sorry, my speech service is down.")
                return ""

def main():
    root = tk.Tk()
    app = VoiceAssistantGUI(root)
    root.mainloop()

if __name__ == "__main__":
    main()
